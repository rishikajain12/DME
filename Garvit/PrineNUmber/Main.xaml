<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1052,428" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap:VirtualizedContainerService.HintSize="241.6,161.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="LastIndex" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="StartingIndex" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="Number" />
      <Variable x:TypeArguments="x:String" Name="PrimeNumber">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="Counter" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="GeneratePrineNUmber1toInfinite" sap:VirtualizedContainerService.HintSize="761.6,1772.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InputDialog Options="{x:Null}" DisplayName="Taking input from the user in Last_Index variable" sap:VirtualizedContainerService.HintSize="720,52.8" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Please enter the highest number upto which you want to print the prime numbers" Title="Enter range">
        <ui:InputDialog.Result>
          <OutArgument x:TypeArguments="x:Int32">[LastIndex]</OutArgument>
        </ui:InputDialog.Result>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InputDialog>
      <Assign DisplayName="Take Starting_Index as 1" sap:VirtualizedContainerService.HintSize="720,60" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[StartingIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">1</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="terate till starting index value is less than the last index value and finding the prime numbers series between start_Index to Last_Index." Condition="[StartingIndex&lt;LastIndex]" DisplayName="Iterating the numbers until starting index is less than 100." sap:VirtualizedContainerService.HintSize="720,1383.2" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_4">
        <ui:InterruptibleWhile.Body>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="684.8,1172" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="To Find the Prime number series" sap:VirtualizedContainerService.HintSize="643.2,1079.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Pass the variable value Starting_Index value to Number" sap:VirtualizedContainerService.HintSize="601.6,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[Number]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StartingIndex]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="To check if the number is divisible by any other number or not, means number is prime or not." Condition="[Number&gt;=1]" DisplayName="Iterating till Number is greater than or equal to 1" sap:VirtualizedContainerService.HintSize="601.6,886.4" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                <ui:InterruptibleWhile.Body>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="566.4,688" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="'Decrease the number value by 1 and Increment the counter value by 1 if Starting_Index mod Number is 0.'" sap:VirtualizedContainerService.HintSize="524.8,595.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[StartingIndex Mod Number = 0]" DisplayName="'Increment the counter value by 1 if Starting_Index mod Number is 0." sap:VirtualizedContainerService.HintSize="483.2,52.8" sap2010:WorkflowViewState.IdRef="If_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Assign DisplayName="Counter by increment by 1" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[Counter]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[Counter+1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                      <Assign DisplayName="'Number by decrement by -1." sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[Number]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Number-1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[Counter = 2]" DisplayName="Counter value is 2 then assign PrimeNumber and starting Index to Prime Number." sap:VirtualizedContainerService.HintSize="483.2,209.6" sap2010:WorkflowViewState.IdRef="If_4">
                        <If.Then>
                          <Assign DisplayName="PrimeNumber and starting Index to Prime Number" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[PrimeNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[PrimeNumber+StartingIndex.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                      <Assign DisplayName="Starting_Index by increment by 1" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[StartingIndex]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[StartingIndex+1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                </ui:InterruptibleWhile.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InterruptibleWhile>
            </Sequence>
          </Sequence>
        </ui:InterruptibleWhile.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InterruptibleWhile>
      <WriteLine DisplayName="Print the Prime number series" sap:VirtualizedContainerService.HintSize="720,64" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Prime Number series from 1 to &quot;+LastIndex.ToString+&quot; are :- &quot; +Environment.NewLine +&#xA;&quot; &quot; +PrimeNumber]" />
    </Sequence>
  </Sequence>
</Activity>